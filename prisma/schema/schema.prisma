generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DIRECT_URL")
}

model Invoice {
  id                       Int              @id @default(autoincrement()) @map("FaturaID")
  createdAt                DateTime         @default(now()) @map("OlusturmaTarihi")
  updatedAt                DateTime?         @updatedAt @map("GuncellemeTarihi")
  invoiceType              InvoiceType?     @map("FaturaTipi")
  invoiceNumber            String           @unique @map("FaturaNumarasi") @db.VarChar(255)
  invoiceDate              DateTime         @map("FaturaTarihi") @db.Date
  dueDate                  DateTime?        @map("VadeTarihi") @db.Date
  partnerTaxNumber       String              @map("MusteriTedarikciID")
  isInternational          Boolean          @map("IsInternational")
  transactionType          TransactionType? @map("TransactionType")
  currency                 String?          @map("ParaBirimi") @db.VarChar(3)
  totalAmountWithoutVat       Decimal      @default(0.0)  @map("ToplamTutarKdvHaric") @db.Decimal(18, 3) 
  totalVatAmount            Decimal        @default(0.0) @map("ToplamKDV")     @db.Decimal(18, 3) 


  customsDeclarationNumber String?          @map("GümrükBeyannameNumarası") @db.VarChar(255)
  exportCountryCode        String?          @map("IhracatUlkeKodu") @db.VarChar(2)
  importCountryCode        String?          @map("IthalatUlkeKodu") @db.VarChar(2)
  exportDate               DateTime?        @map("IhracatTarihi") @db.Date
  importDate               DateTime?        @map("IthalatTarihi") @db.Date
  deliveryTerms            String?          @map("TeslimatKosullari") @db.VarChar(255)
  gtipCode                 String?          @map("GTIPKodu") @db.VarChar(20)
  vatRefundStatus          KDVRefundStatus  @default(Basvurulmadi) @map("KDVIadeDurumu")
  vatRefundApplicationDate DateTime?        @map("KDVIadeBasvuruTarihi") @db.Date
  invoiceFilePath          String?          @map("FaturaDosyaYolu") @db.VarChar(255)

  return_eligible_transaction_type String?            @map("IadeHakkiDogIslemTuru") @db.VarChar
  deduction_kdv_period             String?            @map("IndirimKDVDonem") @db.VarChar
  upload_kdv_period                String?            @map("BelYuklendigiKDVDonem") @db.VarChar
  expense_allocation_id            Int?               @map("YuklenimTuru")
  // Relations
  invoiceDetails                   InvoiceDetail[]
 customerSupplier                 CustomerSupplier @relation(fields: [partnerTaxNumber], references: [taxNumber])

  @@map("Faturalar")
}

model InvoiceDetail {
  id           Int      @id @default(autoincrement()) @map("FaturaDetayID")
  invoiceNumber String      @map("FaturaID")
  product_code String   @map("UrunKOD") @db.VarChar(255)
  quantity     Decimal  @map("Miktar") @db.Decimal(10, 3)
  quantityBalance     Decimal  @map("MiktarBakiye") @db.Decimal(10, 3)
  unitPrice    Decimal  @map("BirimFiyat") @db.Decimal(18, 3)
  totalAmount  Decimal  @map("ToplamTutar") @db.Decimal(18, 3)
  description  String?  @map("Aciklama") @db.Text
  createdAt    DateTime @default(now()) @map("OlusturmaTarihi")
  updatedAt    DateTime? @updatedAt @map("GuncellemeTarihi")

  isVatExempt              Boolean          @default(false) @map("IsKDVMuaf")
  vatExemptionReason       String?          @map("KDVMuafiyetNedeni") @db.Text

  vatRate                  Decimal?         @map("KDVOrani") @db.Decimal(5, 2)
  vatAmount                Decimal?         @map("KDVTutari") @db.Decimal(18, 3)


  // Relations
  invoice Invoice @relation(fields: [invoiceNumber], references: [invoiceNumber])
  product Product @relation(fields: [product_code], references: [stock_code])

  @@map("FaturaDetaylari")
}

model CustomerSupplier {
  id          Int      @id @default(autoincrement()) @map("MusteriTedarikciID")
  title       String   @map("Unvan") @db.VarChar(255)
  taxOffice   String?  @map("VergiDairesi") @db.VarChar(255)
  taxNumber   String?  @unique @map("VergiNumarasi") @db.VarChar(20)
  address     String?  @map("Adres") @db.Text
  countryCode String?  @map("UlkeKodu") @db.VarChar(2)
  phone       String?  @map("Telefon") @db.VarChar(20)
  email       String?  @map("Eposta") @db.VarChar(255)
  isSupplier  Boolean  @default(false) @map("TedarikciMi")
  createdAt   DateTime @default(now()) @map("OlusturmaTarihi")
  updatedAt   DateTime @updatedAt @map("GuncellemeTarihi")

  // Relations
 invoices    Invoice[]

  @@map("MusteriTedarikciler")
}

model Product {
  created_at       DateTime          @default(now()) @db.Timestamptz(6)
  measurement_unit measurement_units
  stock_code       String            @id @db.VarChar
  description      String            @db.VarChar
  balance          Decimal           @db.Decimal(10, 2) @default(0.0)
  unit_weight      Decimal           @db.Decimal(10, 2) @default(0.0)
  isService        Boolean           @default(false)

  // İlişkiler
  project_expenses project_expenses[]
  invoiceDetails   InvoiceDetail[]

  @@map("Products") // Veritabanında hangi tablo ismi kullanılacak
}

model project_expenses {
  id         BigInt   @id @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamptz(6)
  creator_id BigInt

  product_code        String  @db.VarChar
  quantity       Decimal @db.Decimal

  project_id BigInt

  user                      user                     @relation(fields: [creator_id], references: [id], onDelete: NoAction)
  product                   Product                  @relation(fields: [product_code], references: [stock_code], onDelete: NoAction)
  treyler_project           treyler_project          @relation(fields: [project_id], references: [id], onDelete: NoAction)
 
}


model ExpenseReport{
  id  Int @id @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamptz(6)
  creator_id BigInt
  project_id BigInt @unique
  file_path String @db.VarChar
}

model expense_allocation_type {
  id               Int                @id @default(autoincrement())
  description      String             @db.VarChar
}

model treyler_project {
  id               BigInt             @id @default(autoincrement())
  created_at       DateTime           @default(now()) @db.Timestamptz(6)
  creator_id       BigInt
  treyler_type_id  BigInt
  name             String             @db.VarChar
  description      String             @db.VarChar
  customer_name    String             @db.VarChar
  budget           Decimal            @db.Decimal(15, 2)
  total_expenses   Decimal            @db.Decimal(15, 2)
  status           String             @db.VarChar
  end_date         DateTime           @db.Timestamptz(6)
  project_expenses project_expenses[]
  user             user               @relation(fields: [creator_id], references: [id], onDelete: NoAction)
  treyler_type     treyler_type       @relation(fields: [treyler_type_id], references: [id], onDelete: NoAction)
}

model treyler_type {
  id                 BigInt            @id @default(autoincrement())
  created_at         DateTime          @default(now()) @db.Timestamptz(6)
  name               String            @db.VarChar
  description        String?           @db.Text
  class              trailer_class
  image_data         String?           @db.Text // For storing Base64 encoded image data
  image_content_type String?           @db.VarChar(50) // For storing MIME type (e.g., 'image/jpeg')
  treyler_project    treyler_project[]
}

model user {
  id          BigInt   @id @default(autoincrement())
  created_at  DateTime @default(now()) @db.Timestamptz(6)
  username    String   @unique @db.VarChar
  password    String   @db.VarChar
  name        String   @db.VarChar
  surname     String   @db.VarChar
  email       String   @db.VarChar

  roles role[] // Many-to-many relationship with Role
 
  authorization_rank Int
  project_expenses   project_expenses[]
  treyler_project    treyler_project[]

  sentMessages     message[] @relation("sentMessages")
  receivedMessages message[] @relation("receivedMessages")
}

model permission {
  id          Int    @id @default(autoincrement())
  name        String @unique @db.VarChar
  description String @db.VarChar

  roles       role[] // Many-to-many relationship with Role
}


/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model role {
  id          BigInt       @id @default(autoincrement())
  name        String?      @unique @db.VarChar
  description String?      @db.VarChar

  users       user[] // Many-to-many relationship with User
  permissions permission[] // Many-to-many relationship with Permission
}


model message {
  id           Int         @id @default(autoincrement())
  content      String
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  isRead       Boolean     @default(false)
  message_type MessageType @default(text)
  metadata     Json? // JSON field to store additional data for specialized messages

  // Relations
  sender      user   @relation("sentMessages", fields: [senderId], references: [id])
  senderId    BigInt // Changed from Int to BigInt
  recipient   user   @relation("receivedMessages", fields: [recipientId], references: [id])
  recipientId BigInt // Changed from Int to BigInt

  @@index([senderId])
  @@index([recipientId])
}

enum measurement_units {
  ADET
  KİLO
  METRE
  SET
  METREKÜP
  TAKIM
  TON
  PAKET
}

enum MessageType {
  text
  permission_request
  system
}

enum InvoiceType {
  Satis
  Alis
}

enum TransactionType {
  Ihracat
  Ithalat
  YurtIci
}

enum KDVRefundStatus {
  Basvurulmadi
  Basvuruldu
  Onaylandi
  Reddedildi
}


enum trailer_class {
  LOWBED
  LOWLOADER
  FLATBED
  SPECIAL
}

